# -*- coding: utf-8 -*-
"""ai_careplan_generator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1anh_1ndf3ldc-sI1Zy3I9f8aanDbhBI4
"""

import random
import time

def generate_diagnosis_summary(symptoms): return f"Patient presents with {', '.join(symptoms)}. Probable diagnosis includes hypertension and type 2 diabetes."

def generate_treatment_recommendations(): return [ "Initiate antihypertensive therapy", "Begin metformin for glycemic control", "Recommend regular blood pressure monitoring" ]

def generate_medication_plan(): return { "Metformin": "500mg twice daily", "Lisinopril": "10mg once daily" }

def generate_lifestyle_modifications(): return [ "Adopt DASH diet", "30 minutes of moderate exercise 5 times per week", "Limit sodium intake to <2.3g/day" ]

def generate_followup_schedule(): return { "Initial follow-up": "2 weeks", "Lab tests": "HbA1c in 3 months", "Next primary care visit": "6 months" }

def validate_input(data):
    if 'symptoms' not in data or not isinstance(data['symptoms'], list):
        raise ValueError("Invalid input: 'symptoms' must be a list")

def generate_care_plan(data):
    validate_input(data)
    start_time = time.time()

    care_plan = {
        "Diagnosis Summary": generate_diagnosis_summary(data['symptoms']),
        "Treatment Recommendations": generate_treatment_recommendations(),
        "Medication Plan": generate_medication_plan(),
        "Lifestyle Modifications": generate_lifestyle_modifications(),
        "Follow-up Schedule": generate_followup_schedule()
    }

    latency = time.time() - start_time
    care_plan['Latency (s)'] = round(latency, 3)
    return care_plan

if __name__ == "__main__":
    sample_input = { "symptoms": ["fatigue", "blurred vision", "frequent urination"] }
    print(generate_care_plan(sample_input))